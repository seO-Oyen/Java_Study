자바스크립트 기초를 다루는 커리큘럼을 계열화하여 구성한다면, 웹 프로그래밍에 필요한 기본적인 개념과 
문법을 중심으로 학습자가 기초적인 자바스크립트 코드를 작성하고 이해할 수 있도록 진행됩니다.

### 1. 자바스크립트 소개 및 환경 구축
- **자바스크립트란?**
  - 역사와 특징
  - 웹에서의 역할

- **환경 구축**
  - 웹 브라우저에서의 실행
  - 개발자 도구 소개
  - 간단한 코드 실행

### 2. 변수와 데이터 타입
- **변수 선언**
  - `var` : 전역변수, 선언 후 재 선언 가능
  - `let` : 지역/전역변수 구분, 선언 후 재선언 불가
  - `const` : 상수, 한번 선언후 초기화되면 다시 재할당 불가
  - 변수 이름 규칙
  	_, &

- **기본 데이터 타입**
  - 숫자 (Number)
  - 문자열 (String)
  - 불리언 (Boolean)
  - 함수형 (function)
  - 객체형 (Object)
  
  ------------------
  - Undefined(선언되지 않고 초기화되지 않은 변수 사용), Null, NaN(숫자형 문자열이 아닌데 형변환 처리시) => 실행은 되나 에러리턴 코드
  
- **형 변환**
  - 형변환이 자유로운 편이다. 
    - 사칙연산자 '+' 이외에는 숫자형 문자열인 경우 자동형변환이 된다.
  
  - 명시적, 암묵적 형 변환
    - Number() : 실수 / 정수 형변환 처리
    - parseInt() : 정수형 형변환 처리 -> 숫자만 추출
    - parseFloat() : 실수형 형변환 처리 숫자만 추출
  - 데이터 타입 확인하기
  	- typeof() 함수 활용

### 3. 기본 연산자와 제어 구문
- **연산자**
  - 산술 연산자
  - 비교 연산자
  - 논리 연산자

- **조건문**
  - `if`, `else`, `else if`
  - 삼항 연산자
  - `switch`문

- **반복문**
  - `for`
  - `while`, `do-while`
  
### 4. 함수
- **함수의 기본**
  - 함수 선언과 호출
  - 매개변수와 반환 값
	  function plus (num01, num02) { // 매개변수
	  	var sum = num01 + num02; // 로직처리
	  	return sum; // 호출하는 곳에 전달할 리턴값
	  }
  - 매개변수의 여러가지 유형
  1. 기본 변수 전달
  2. js의 type전달(number(숫자), string(문자열), boolean(true/false), function, object(array 포함)
  3. 익명함수 매개변수 처리
  	// 정의된 함수를 호출하여 매개변수로 전달하는 것을 말한다
  	// 정의된 내용을 재활용하지 않고 바로 사용할 때 활용된다.
  4. 동적인 매개변수 처리
  	- 동일한 함수로 여러가지 매개변수에 따른 처리를 하고자 할 때 사용
  	1) arguments
  		- 내장 객체를 이용해서 매개변수의 내용을 순서로 배열을 할당하여 처리
  	2) ... 배열명 : 내가 지정한 배열명으로 매개 변수 값을 선언하여 활용할 수 있다
  	3) default매개변수 : 해당 매개변수가 없을 때는 선언 된 default 값으로 처리
  		함수명 (name="이름없음", price = 0, cnt = 1)
  		function buyProd(name = "구매물건 없음", price = 0, cnt = 1) {
  			alert(`
  				# 구매정보 #
  				물건명 : ${name}
  				가격 : ${price}
  				갯수 : ${cnt}
  				총비용 : ${price * cnt}			
  			`)
  		}
  		buyProd()
  		buyProd("사과")
  		buyProd("오렌지", 3000)
  		buyProd("수박", 12000, 5)
  
- **기본 내장 함수**
  - `alert()`, `prompt()`, `confirm()`
  - 기타 유용한 내장 함수
  	Number(), parseInt(), parseFloat() : 형변환
  	eval() : 코드로 변환 처리
  	isNaN() : 형변환시, 입력값이 숫자형 문자형이 아닐때를 체크해주는 boolean함수
  	setTimeout(함수, 1/1000) : 해당 시간 이후 처리할 내용 함수로 구현
  	clearTimeout(변수) : 위 setTimeout을 메모리 해제 처리
  	setInterval(함수, 1/1000) : 해당 시간 간격마다 반복해서 처리할 내용
  	clearInterval(변수) : 위 setInterval 메모리 해제로 반복을 중단
  	

### 5. 배열
- **배열의 정의와 사용**
  - 배열 생성
    var arry = []
  - 배열 요소 접근
  	index로 추가 접근
  - 배열 메서드 (`push`, `pop`, `shift`, `unshift` 등)
  	배열명.push(마지막에 추가할 데이터)
  	배열명.pop() : 마지막에 내용을 삭제하면서 마지막 요소를 리턴한다

### 6. 객체 기초
- **객체의 정의와 사용**
	var obj = {속성:속성값, 속성2:속성2값} : 
		json(javascript object notation) 객체 선언 방식
	function Person(name, age) {
		this.name = name
		this.age = age
		this.show = function() {
			console.log("이름 : " + this.name)
			console.log("나이 : " + this.age)
		}
	}
	var p01 = new Person("홍길동", 25)
	
	class Car {
		constructor(brand, model) {
			this.brand = brand
			this.model = model
		}
		displayInfo() {
			console.log(`이 차는 ${this.brand}이고 모델 ${this.model} 입니다`)
		}
	}
	var c01 = new Car("현대", "그랜저")
	c01.displayInfo()
			
  - 객체 리터럴
  - 프로퍼티와 메서드
  - 객체 내부에서의 `this`

### 7. 이벤트와 기본 DOM 조작
- **웹 페이지 이벤트**
  - `click`, `mouseover`, `keydown` 등의 이벤트
  
- **DOM 선택과 조작**
  - 요소 선택 (`getElementById`, `querySelector` 등)
  - 요소 내용 및 스타일 조작
  
### 8. 이벤트 처리**

* 이벤트, 이벤트 리스너, 이벤트 버블링 등 이벤트 처리의 기본 개념을 학습합니다.
* 마우스 이벤트, 키 이벤트, 로드 이벤트 등 다양한 이벤트를 처리하는 방법을 익힙니다.

### 9.  DOM 조작**

* DOM(Document Object Model)의 기본 개념과 구조를 학습합니다.
* DOM을 사용하여 HTML 요소를 생성, 수정, 삭제하는 방법을 익힙니다.

- 화면에 있는 Tag 객체화하여 동적으로 처리할 때 사용
- 이벤트 속성으로 지정해 이 이벤트를 처리했을 때 함수를 할당해서 그 함수 블록을 처리

### 10. AJAX**

* AJAX(Asynchronous JavaScript and XML)의 기본 개념과 작동 방식을 학습합니다.
* AJAX를 사용하여 서버와 비동기 통신을 수행하는 방법을 익힙니다.


  
### 8. 마무리 및 실전 예제
- 기초적인 웹 애플리케이션 만들기 (예: 할 일 목록)
- 이전에 배운 개념들을 활용한 실습

이 커리큘럼을 통해 학습자는 자바스크립트의 기본 문법과 웹에서의 활용 방법에 대한 기초적인 이해를 얻을 수 있습니다.