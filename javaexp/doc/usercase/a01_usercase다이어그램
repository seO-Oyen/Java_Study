구글에 staruml 다운로드 실행 (window 용)


1. 유스케이스 다이어그램의 구성요소와 표현
	1) 유스케이스 다이어그램의 필요성
		- 요구사항 정의는 개발과 설계에서 매우 큰 비중을 차지함
			- 누가 시스템을 사용할 것인가?
			- 시스템은 사용자를 위한 무엇을 해야하는가?
			- 사용자와 상호작용하기 위해 시스템이 제공해야할 인터페이스는 무엇인가?
			
2. 유스케이스 다이어그램 관계
	1) 액터와 유스케이스
		- 액터(actor)
			개발할 시스템 외부의 존재, 이벤트 흐름을 시작하게 하는 객체
		- 유스케이스
			시스템 내부에 해당하는 단위 기능, 사용자 관점에서 시스템을 모델링
		# 일반적인 연관 관계 외에 다양한 관계가 존재할 수 있음
	2) 액터와 유스케이스 관계
		- 연관관계
			해당 엑터와 정보를 주고받는 유스케이스와 설정됨
		- 포함관계(필수 관계)
			다른 유스케이스에서 기존 유스케이스를 재사용할 수 있음을 나타냄
			ex) 회원가입 : 사용자 인증
		- 확장관계(옵셔널 관계)
			기존 유스케이스에 진행단계를 추가하여 새로운 유스케이스를 만들어내는 관계
			ex) 결제시 카드 / 계좌이체 / 현금
	3) 엑터 사이의 일반화 관계
		- 사이트의 사용자
			비회원 회원 관리자
	
	4) 유스케이스 사이의 관계
		- 포함관계
			하나의 유스케이스를 수행할때, 같은 기능이 있는 다른 유스케이스가
			반드시 수행되는 관계
		- 확장관계
			상위 유스케이스로부터 어떤한 특정 조건에 의해 수행
			기본 유스케이스를 수정하지 않고 새로운 요구 사항을 추가로 표현하고자 
			할 때 사용
			이벤트 흐름을 확장 유스케이스의 수행결과에 의존
	
	# 포함관계와 확장관계의 비교
	1. 목적
		포함 관계 : 여러 유스케이스에 공통적인 기능을 표현하기 위해 사용
		확장 관계 : 기준 유스케이스에 부가적으로 추가된 기능을 표현하기위해 사용
	2. 이벤트 흐름
		포함 관계 : 포함 유스케이스로 분리되는 이벤트 흐름이 필수적
			기준 유스케이스 이후의 이벤트 흐름이 포함 유스케이스의 수행결과에
			의존한다
		확장 관계 : 기준 유스케이스에 기술된 조건에 따라 분기가 선택적으로 수행
			이벤트 흐름이 확장 유스케이스의 결과로 의존하지 않는다.
			
	# 액터 사이의 관계
	1. 일반화 관계
		액터들이 유스케이스와 중복하여 관계가 나타나면 액터들을 통하여 일반화
		관계로 표현
		추상적인 액터와 좀 더 구체적인 액터 사이의 관계를 맺어준다
	2. 중복관계
		유스케이스 모델링을 할 때 유스케이스 이벤트 흐름에서 중복된 부분이 있을때
		설정