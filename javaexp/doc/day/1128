# 학습목표
- `request`, `response`, `session` 객체의 역할과 사용 방법을 이해합니다.
- 서블릿과 JSP에서 이 객체들이 어떻게 사용되는지 알아봅니다.
- 웹 어플리케이션에서 상태 관리의 중요성을 이해합니다.

# 주요 핵심 키워드와 개념
- Request 객체 : 클라이언트의 요청 정보를 담고 있으며 사용자의 데이터, 파라미터,
	헤더 정보등을 포함합니다.
- Response 객체 : 서버의 응답을 구성하는 객체로 클라이언트에게 전송될 데이터를 담는다.
- Session 객체 : 사용자의 세션을 관리하며 사용자별로 서버에 저장되는 정보를 관리합니다.

# 생각하고 토론해볼 내용
- 세션 관리없이 사용자 인증이 어떻게 달라질까요?
- `request`와 `response`객체를 사용하여 사용자의 요청과 서버의 응답을 어떻게
	더 효율적으로 관리할 수 있을까요?
- 세션과 쿠키의 차이점은 무엇이며 어떤경우에 사용하는 것이 좋을까요?

# 간단한 퀴즈
1) JSP에서 사용자가 요청한 URL의 쿼리 스트링을 가져오는 `request`객체의 메소드는
	무엇인가요?
	- a) `getRequestURL()`
	- b) `getQueryString()`
	- c) `getRequestURI()`
	- d) `getParameter()`
2) 세션에서 특정 속성 값을 가져오기 위해 사용하는 메소드는 무엇인가요?
	- a) `getAttribute()`
	- b) `getSession()`
	- c) `getValue()`
	- d) `getSeesionAttribute()`
	

==========================

# request 기본 객체 (a02-a01)
1. 웹 브라우저가 웹 서버에 전송한 요청 관련 정보 제공
2. 주요 기능
	1) 클라이언트(웹 브라우저)와 관련된 정보 읽기 가능
	2) 서버와 관련된 정보 읽기 기능
	3) 클라이언트가 전송한 쿠키읽기 가능
	5) 속성 처리 기능
3. 요청관련 주요 정보 처리 메서드
	1) getRemoteAddr()
		웹 서버에 연결한 클라이언트의 ip 주소를 구한다. 게시판이나 방명록 등에서
		글 작성의 ip주소가 자동으로 입력되기도 하는데 이 때 입력되는 ip주소가 바로
		이 메서드를 사용하여 구한 것이다.
	2) getMethod()
		웹 브라우저가 정보를 전송할 때 사용한 방식을 구한다.
		form의 method="get/post"
	3) getRequestURI()
		웹 브라우저가 요청한 url에서 경로를 구한다.
	4) getContextPath()
		jsp페이지가 속한 
		
		
		
=============================

# request 요청값 처리 기능 메서드 (a02-a02)
1. String name = requeset.getParameter("요청키");
	이름이 요청키인 파라미터 값을 구한다. 존재하지 않을 경우 null을 리턴한다.
2. String[] names request.getParameterValues("다중의 요청키");
	이름이 다중의요청키(요청키가 동일한 이름으로 여러개) 인 모든 파라미터의 값을
	배열로 구한다. 존재하지 않을 경우 null을 리턴
3. Enumberaiont enum = request.getParameterNames();
	웹 브라우저가 전송한 파라미터 전체 이름을 가져온다.
4. Map map01 = request.getParameterMap();
	웹 브라우저가 전송한 파라미터의 맵을 구한다. 맵은 <파라미터이름, 값> 쌍으로 구성된다.